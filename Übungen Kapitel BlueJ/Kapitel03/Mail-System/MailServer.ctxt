#BlueJ class context
comment0.target=MailServer
comment0.text=\n\ Ein\ simples\ Modell\ eines\ Mail-Servers.\ Der\ Server\ kann\ Nachrichten\n\ entgegen\ nehmen\ und\ auf\ Anfrage\ an\ Mail-Clients\ weiterleiten.\n\n\ @author\ David\ J.\ Barnes\ und\ Michael\ K\u00F6lling\n\ @version\ 2016.02.29\n
comment1.params=
comment1.target=MailServer()
comment1.text=\n\ Erzeuge\ einen\ MailServer.\n
comment2.params=benutzer
comment2.target=int\ anzahlNachrichtenFuer(java.lang.String)
comment2.text=\n\ Liefere\ die\ Anzahl\ der\ Nachrichten\ f\u00FCr\ den\ angegebenen\ Benutzer.\n\ @param\ benutzer\ \ Benutzer,\ dessen\ Nachrichtenanzahl\ geliefert\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ werden\ soll\n\ @return\ \ \ \ \ \ \ \ \ \ die\ Anzahl\ der\ Nachrichten\ f\u00FCr\ 'benutzer'\n
comment3.params=benutzer
comment3.target=Nachricht\ gibNaechsteNachrichtFuer(java.lang.String)
comment3.text=\n\ Liefere\ die\ n\u00E4chste\ Nachricht\ f\u00FCr\ den\ angegebenen\ Benutzer.\n\ Liefere\ null,\ falls\ keine\ Nachrichten\ vorhanden\ sind.\n\ @param\ benutzer\ \ Benutzer,\ f\u00FCr\ den\ die\ Nachricht\ geliefert\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ werden\ soll\n\ @return\ \ \ \ \ \ \ \ \ \ die\ n\u00E4chste\ Nachricht,\ falls\ vorhanden,\ null\ sonst.\n
comment4.params=nachricht
comment4.target=void\ leiteWeiter(Nachricht)
comment4.text=\n\ Leite\ die\ angegebene\ Nachricht\ auf\ Anfrage\ weiter.\n\ @param\ nachricht\ \ die\ Nachricht,\ die\ auf\ dem\ Server\ hinterlegt\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ werden\ soll\n
numComments=5
